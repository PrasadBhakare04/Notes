Vectors Operations:
v.push_back(element); : Adds elements to the last
v.pop_back(); : Removes elemennts from the last
v.size();
sort(v.begin(), v.end()); : Sorts the array in Ascending order
reverse(v.begin(), v.end()); : Reverse the array

Greedy algorithm:
Follows local optimal choice at each stage with intent of finding global optimum.
For Ex. We buy clothes from shops where the price is less but do not care the long-term results.
Based on selection criteria we have to find out the optimal solution.

Feasible soln(Selection) : Available solutions
Optimal soln : lowest cost, maximize the profit.
Application :   1.Knapsack problem.
		2.Job sequencing.
		3.Minimum spanning tree.
		4.Optimal Merge Pattern
		5.Huffman Coding.
		6.Dijkstra's algorithm.
1.Knapsack Problem: Time complexity (n log n)
Problem Statement 
Suppose there is a bag having weight capacity which can be filled with object having weight and value So find the optimal solution.
So we have to choose the objects on the basis of both weight and value
Object  |  A  |  B  |  C  |
Weight  |  25 |  24 |  15 |
Value   |  18 |  15 |  10 |
per unit   1.3   1.8  1.5
value   

So in tthis example we will choose the object with highest per unit value first.